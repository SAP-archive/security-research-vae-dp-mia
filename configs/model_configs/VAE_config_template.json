{
    "type": "VAE",
    "epochs": "number of training epochs",
    "batch_size": "number of samples for one training step.",
    "dim_z": "Size of latent space.",
    "?lstm_size": "Size of LSTM layer in MultitaskSensorDataVAE.",
    "data_dir": "Path to save data to",
    "dataset": "Identifier for dataset used for training",
    "shuffle_data": "Boolean that specifies if data should be shuffled after loading",
    "?stratify_split": "Whether the split in train test and val dataset should be stratified. Defaults to False.",
    "train_size": "Percentage of data or absolute number of records that should be used for training.",
    "val_size": "Percentage of data or absolute number of records that should be used for validation.",
    "?force_new_data_indices": "Forces dataset to create new data indices for train, val and test.",
    "?use_classes": "List of all classes that should be used for model training. When property not defined or None, all classes are used",
    "?ldp_lower_bound": "Lower bound of sigma for training of VAE as LDP generator.",
    "?data_ldp_noise": "Value for VAE-LDP data noise, if needed",
    "?epsilon": "Epsilon Value for LDP data, if needed",
    "?m": "Neighborhood for Pixelization. Required if epsilon is set for pixelization",
    "?b": "Size of grid cells. Defaults to 1.",
    "?train": "Whether LDP should be applied to train set. Defaults to True",
    "?test": "Whether LDP should be applied to test set. Defaults to False",
    "?val": "Whether LDP should be applied to validation set. Defaults to False",
    "optimizer": "name of the optimizer to use",
    "optimizer_params": "dict of parameters which get passed directly to the optimizer. Depend on chosen optimizer",
    "?per_example_loss": "whether the loss for each record should be returned (needed for microbatches in DP-Optimizers.",
    "?log_gradients": "Whether gradient information should be logged. Either true, false or 'memory_efficient'",
    "?early_stopping": "Whether EarlyStopping Callback should be used.",
    "?checkpoint_model": "If set, the model is saved every n epochs to model_dir/checkpoints",
    "?epoch_modulo": "After how many epochs the latent space analysis should run.",
    "?median_clip": "Only used for storing results of log gradients.",
    "?mean_clip": "Only used for storing results of log gradients.",
    "?25_perc_clip": "Only used for storing results of log gradients.",
    "?75_perc_clip": "Only used for storing results of log gradients.",
    "?cdp_epsilon": "The epsilon value used for cdp training returned by rdp accountant.",
    "?cdp_delta": "The delta value used for cdp training returned by rdp accountant."
}